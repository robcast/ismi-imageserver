version: '3'

services:
  iipsrv:
    build: ./iipimage
    restart: unless-stopped
    environment:
      - URI_MAP=iiif/images=>IIIF
      - FILESYSTEM_PREFIX=/var/www/images/
      - JPEG_QUALITY=${JPEG_QUALITY:-90}
    volumes:
      - images:/var/www/images/:ro
    networks:
      - internal
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  auth:
    build: ./auth
    restart: unless-stopped
    environment:
      - SECRET_KEY=${AUTH_SECRET_KEY:?err}
      - SECURITY_PASSWORD_SALT=${AUTH_PASSWORD_SALT:?err}
      - DB_CONNECTION=${AUTH_DB_CONNECTION:?err}
      - ADMIN_USERID=${AUTH_ADMIN_USERID:?err}
      - ADMIN_PASSWORD=${AUTH_ADMIN_PASSWORD:?err}
    networks:
      - internal
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

  nginx:
    image: nginx:stable-alpine
    restart: unless-stopped
    environment:
      - VIRTUAL_HOST=${VIRTUAL_HOST:?err}
    labels:
      # use traefik proxy
      - "traefik.enable=true"
      - "traefik.docker.network=proxy-net"
      # create router for our host
      - "traefik.http.routers.imageserver.rule=Host(`${VIRTUAL_HOST:?err}`) && PathPrefix(`/iiif`)"
      # use TLS
      - "traefik.http.routers.imageserver.entrypoints=https"
      - "traefik.http.routers.imageserver.tls=true"
    volumes:
      - ./proxy/nginx/templates/:/etc/nginx/templates/:ro
      - manifests:/var/www/iiif/manifests/:ro
      - ./default-manifests:/var/www/iiif/default-manifests:ro
    networks:
      - internal
      - proxy-net
    logging:
      driver: json-file
      options:
        max-size: "10m"
        max-file: "3"

volumes:
  images:
    driver: local
    driver_opts:
      type: none
      device: "${IMAGE_DIR:?err}"
      o: bind
  manifests:
    driver: local
    driver_opts:
      type: none
      device: "${MANIFEST_DIR:?err}"
      o: bind

networks:
  internal:
  proxy-net:
    name: proxy-net
    external: true
